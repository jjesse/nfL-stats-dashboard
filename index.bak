<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üèà NFL Stats Dashboard</title>
    <style>
        :root {
            --bg-color: #1a1a1a;
            --text-color: #ffffff;
            --accent-color: #007bff;
            --card-bg: #2d2d2d;
            --border-color: #444;
            --success-color: #2ECC71;
            --warning-color: #F39C12;
            --danger-color: #E74C3C;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background-color: var(--bg-color);
            color: var(--text-color);
            line-height: 1.6;
        }
        
        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }
        
        header {
            text-align: center;
            margin-bottom: 30px;
            padding: 30px;
            background: linear-gradient(135deg, #007bff, #0056b3);
            border-radius: 15px;
            box-shadow: 0 8px 25px rgba(0, 123, 255, 0.3);
        }
        
        header h1 {
            font-size: 2.5em;
            margin-bottom: 10px;
        }
        
        header p {
            font-size: 1.2em;
            opacity: 0.9;
        }
        
        .nav-tabs {
            display: flex;
            justify-content: center;
            margin-bottom: 30px;
            border-bottom: 2px solid var(--border-color);
            flex-wrap: wrap;
        }
        
        .nav-tab {
            padding: 12px 24px;
            margin: 0 5px 10px 5px;
            background: var(--card-bg);
            border: 2px solid var(--border-color);
            border-radius: 8px 8px 0 0;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 500;
            font-size: 14px;
        }
        
        .nav-tab:hover {
            background: var(--accent-color);
            color: white;
            transform: translateY(-2px);
        }
        
        .nav-tab.active {
            background: var(--accent-color);
            color: white;
            border-color: var(--accent-color);
        }
        
        .tab-content {
            display: none;
            animation: fadeIn 0.3s ease-in;
        }
        
        .tab-content.active {
            display: block;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .stat-card {
            background: var(--card-bg);
            padding: 25px;
            border-radius: 12px;
            border: 1px solid var(--border-color);
            transition: all 0.3s ease;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
        }
        
        .stat-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.4);
        }
        
        .stat-card h3 {
            margin-bottom: 8px;
            color: var(--accent-color);
            font-size: 1.3em;
        }
        
        .stat-card p small {
            color: #888;
            font-size: 0.9em;
        }
        
        .chart-container {
            text-align: center;
            margin: 20px 0;
            border-radius: 8px;
            overflow: hidden;
        }
        
        .chart-container img {
            max-width: 100%;
            height: auto;
            border-radius: 8px;
            transition: transform 0.3s ease;
        }
        
        .chart-container img:hover {
            transform: scale(1.02);
        }
        
        .chart-error {
            background: rgba(231, 76, 60, 0.1);
            border: 1px solid var(--danger-color);
            border-radius: 8px;
            padding: 15px;
            color: var(--danger-color);
            font-size: 0.9em;
        }
        
        .status-indicator {
            display: inline-block;
            width: 10px;
            height: 10px;
            border-radius: 50%;
            margin-right: 8px;
        }
        
        .status-success { background-color: var(--success-color); }
        .status-warning { background-color: var(--warning-color); }
        .status-danger { background-color: var(--danger-color); }
        
        .last-updated {
            text-align: center;
            margin-top: 40px;
            padding: 20px;
            background: var(--card-bg);
            border-radius: 8px;
            color: #888;
            font-size: 0.9em;
        }
        
        .quick-stats {
            background: rgba(0, 123, 255, 0.1);
            border: 1px solid var(--accent-color);
            border-radius: 8px;
            padding: 15px;
            margin-top: 15px;
        }
        
        .quick-stats h4 {
            color: var(--accent-color);
            margin-bottom: 10px;
        }
        
        .quick-stats ul {
            list-style: none;
            padding: 0;
        }
        
        .quick-stats li {
            padding: 5px 0;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .quick-stats li:last-child {
            border-bottom: none;
        }
        
        @media (max-width: 768px) {
            .container {
                padding: 10px;
            }
            
            header h1 {
                font-size: 2em;
            }
            
            .nav-tabs {
                flex-direction: column;
                align-items: center;
            }
            
            .nav-tab {
                width: 200px;
                text-align: center;
            }
            
            .stats-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>üèà NFL Stats Dashboard</h1>
            <p>Real-time NFL statistics, trends, and advanced analytics</p>
            <div id="last-update-header" style="margin-top: 15px; font-size: 0.9em; opacity: 0.8;">
                Loading data status...
            </div>
        </header>
        
        <div class="nav-tabs">
            <div class="nav-tab active" onclick="showTab('overview')">üìä Overview</div>
            <div class="nav-tab" onclick="showTab('players')">üë§ Players</div>
            <div class="nav-tab" onclick="showTab('teams')">üèà Teams</div>
            <div class="nav-tab" onclick="showTab('standings')">üìã Standings</div>
            <div class="nav-tab" onclick="showTab('awards')">üèÜ Awards</div>
        </div>
        
        <!-- Overview Tab -->
        <div id="overview" class="tab-content active">
            <h2 style="margin-bottom: 20px; color: var(--accent-color);">Dashboard Overview</h2>
            <div class="stats-grid">
                <div class="stat-card">
                    <h3>üéØ Quarterback Leaders</h3>
                    <p><small>Top passers: yards, TDs, rating, completion %</small></p>
                    <div class="chart-container">
                        <img src="passing_stats.png" alt="Passing Statistics" 
                             onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">
                        <div class="chart-error" style="display: none;">
                            <span class="status-indicator status-warning"></span>
                            Chart not available. Run: <code>python src/data-processors/player-stats.py</code>
                        </div>
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üèÉ Rushing Leaders</h3>
                    <p><small>Top rushers: yards, TDs, attempts, YPC</small></p>
                    <div class="chart-container">
                        <img src="rushing_stats.png" alt="Rushing Statistics"
                             onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">
                        <div class="chart-error" style="display: none;">
                            <span class="status-indicator status-warning"></span>
                            Chart not available. Run: <code>python src/data-processors/player-stats.py</code>
                        </div>
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üéØ Receiving Leaders</h3>
                    <p><small>Top receivers: catches, yards, TDs, YPR</small></p>
                    <div class="chart-container">
                        <img src="receiving_stats.png" alt="Receiving Statistics"
                             onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">
                        <div class="chart-error" style="display: none;">
                            <span class="status-indicator status-warning"></span>
                            Chart not available. Run: <code>python src/data-processors/player-stats.py</code>
                        </div>
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üõ°Ô∏è Defensive Leaders</h3>
                    <p><small>Top defenders: tackles, sacks, interceptions</small></p>
                    <div class="chart-container">
                        <img src="defense_stats.png" alt="Defense Statistics"
                             onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">
                        <div class="chart-error" style="display: none;">
                            <span class="status-indicator status-warning"></span>
                            Chart not available. Run: <code>python src/data-processors/player-stats.py</code>
                        </div>
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üìä Team Standings</h3>
                    <p><small>Division leaders and standings</small></p>
                    <div class="chart-container">
                        <img src="team_stats.png" alt="Team Statistics"
                             onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">
                        <div class="chart-error" style="display: none;">
                            <span class="status-indicator status-warning"></span>
                            Chart not available. Run: <code>python src/data-processors/team-stats-basic.py</code>
                        </div>
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üìà Team Trends</h3>
                    <p><small>Weekly momentum and recent form</small></p>
                    <div class="chart-container">
                        <img src="team_weekly_trends.png" alt="Team Trends"
                             onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">
                        <div class="chart-error" style="display: none;">
                            <span class="status-indicator status-success"></span>
                            Chart available! Working processor.
                        </div>
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üî¨ Advanced Analytics</h3>
                    <p><small>Conference comparisons and efficiency</small></p>
                    <div class="chart-container">
                        <img src="team_advanced_analytics.png" alt="Advanced Analytics"
                             onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">
                        <div class="chart-error" style="display: none;">
                            <span class="status-indicator status-success"></span>
                            Chart available! Working processor.
                        </div>
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üèÜ Award Predictions</h3>
                    <p><small>MVP, OROY, DROY predictions</small></p>
                    <div class="chart-container">
                        <img src="awards_predictions.png" alt="Awards Predictions"
                             onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">
                        <div class="chart-error" style="display: none;">
                            <span class="status-indicator status-success"></span>
                            Chart available! Working processor.
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Players Tab -->
        <div id="players" class="tab-content">
            <h2 style="margin-bottom: 20px; color: var(--accent-color);">Player Statistics</h2>
            <div class="stats-grid">
                <div class="stat-card">
                    <h3>üéØ Passing Leaders</h3>
                    <p><small>Quarterback performance metrics</small></p>
                    <div class="chart-container">
                        <img src="passing_stats.png" alt="Passing Statistics"
                             onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">
                        <div class="chart-error" style="display: none;">
                            Passing statistics chart not generated yet.
                        </div>
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üèÉ Rushing Leaders</h3>
                    <p><small>Running back performance</small></p>
                    <div class="chart-container">
                        <img src="rushing_stats.png" alt="Rushing Statistics"
                             onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">
                        <div class="chart-error" style="display: none;">
                            Rushing statistics chart not generated yet.
                        </div>
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üéØ Receiving Leaders</h3>
                    <p><small>Wide receiver and tight end stats</small></p>
                    <div class="chart-container">
                        <img src="receiving_stats.png" alt="Receiving Statistics"
                             onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">
                        <div class="chart-error" style="display: none;">
                            Receiving statistics chart not generated yet.
                        </div>
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üõ°Ô∏è Defensive Leaders</h3>
                    <p><small>Defensive player performance</small></p>
                    <div class="chart-container">
                        <img src="defense_stats.png" alt="Defense Statistics"
                             onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">
                        <div class="chart-error" style="display: none;">
                            Defense statistics chart not generated yet.
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Teams Tab -->
        <div id="teams" class="tab-content">
            <h2 style="margin-bottom: 20px; color: var(--accent-color);">Team Analytics</h2>
            <div class="stats-grid">
                <div class="stat-card">
                    <h3>üìä Basic Team Stats</h3>
                    <p><small>Standings, win%, division leaders</small></p>
                    <div class="chart-container">
                        <img src="team_stats.png" alt="Team Statistics"
                             onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">
                        <div class="chart-error" style="display: none;">
                            Team statistics chart not generated yet.
                        </div>
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üî¨ Advanced Analytics</h3>
                    <p><small>Conference analysis, efficiency metrics</small></p>
                    <div class="chart-container">
                        <img src="team_advanced_analytics.png" alt="Advanced Team Analytics"
                             onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">
                        <div class="chart-error" style="display: none;">
                            Advanced analytics chart not generated yet.
                        </div>
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üìà Weekly Trends</h3>
                    <p><small>Momentum, recent form, win streaks</small></p>
                    <div class="chart-container">
                        <img src="team_weekly_trends.png" alt="Team Weekly Trends"
                             onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">
                        <div class="chart-error" style="display: none;">
                            Weekly trends chart not generated yet.
                        </div>
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üìã Data Overview</h3>
                    <div class="quick-stats">
                        <h4>Available Data</h4>
                        <ul id="data-status">
                            <li><span class="status-indicator status-warning"></span>Checking data files...</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Standings Tab -->
        <div id="standings" class="tab-content">
            <h2 style="margin-bottom: 20px; color: var(--accent-color);">NFL Standings</h2>
            <div id="standings-content">
                <div class="stat-card">
                    <h3>üìä Current Standings</h3>
                    <div id="standings-table">
                        <p>Loading standings data...</p>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Awards Tab -->
        <div id="awards" class="tab-content">
            <h2 style="margin-bottom: 20px; color: var(--accent-color);">Award Predictions</h2>
            <div class="stats-grid">
                <div class="stat-card">
                    <h3>üèÜ MVP Predictions</h3>
                    <p><small>Most Valuable Player candidates</small></p>
                    <div class="chart-container">
                        <img src="awards_predictions.png" alt="Awards Predictions"
                             onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">
                        <div class="chart-error" style="display: none;">
                            Awards predictions chart not generated yet.
                        </div>
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üìà Prediction Accuracy</h3>
                    <div class="quick-stats">
                        <h4>Model Performance</h4>
                        <div id="accuracy-stats">Loading accuracy data...</div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="last-updated">
            <p><strong>Dashboard Status:</strong> <span id="overall-status">Loading...</span></p>
            <p><strong>Last Updated:</strong> <span id="last-update">Loading...</span></p>
            <p><small>All charts update automatically via GitHub Actions every 6 hours during NFL season</small></p>
        </div>
    </div>
    
    <script>
        function showTab(tabName) {
            // Hide all tab contents
            const tabContents = document.querySelectorAll('.tab-content');
            tabContents.forEach(content => content.classList.remove('active'));
            
            // Remove active class from all tabs
            const tabs = document.querySelectorAll('.nav-tab');
            tabs.forEach(tab => tab.classList.remove('active'));
            
            // Show selected tab content
            document.getElementById(tabName).classList.add('active');
            
            // Add active class to clicked tab
            event.target.classList.add('active');
        }
        
        // Load data status and timestamps
        function loadDataStatus() {
            const files = [
                { name: 'passing_stats.png', label: 'Player Passing Stats' },
                { name: 'rushing_stats.png', label: 'Player Rushing Stats' },
                { name: 'receiving_stats.png', label: 'Player Receiving Stats' },
                { name: 'defense_stats.png', label: 'Player Defense Stats' },
                { name: 'team_stats.png', label: 'Team Basic Stats' },
                { name: 'team_weekly_trends.png', label: 'Team Weekly Trends' },
                { name: 'team_advanced_analytics.png', label: 'Advanced Team Analytics' },
                { name: 'awards_predictions.png', label: 'Awards Predictions' }
            ];
            
            let availableCount = 0;
            const statusList = document.getElementById('data-status');
            statusList.innerHTML = '';
            
            files.forEach(file => {
                const img = new Image();
                img.onload = function() {
                    availableCount++;
                    const li = document.createElement('li');
                    li.innerHTML = `<span class="status-indicator status-success"></span>${file.label}: Available`;
                    statusList.appendChild(li);
                    updateOverallStatus(availableCount, files.length);
                };
                img.onerror = function() {
                    const li = document.createElement('li');
                    li.innerHTML = `<span class="status-indicator status-danger"></span>${file.label}: Not generated`;
                    statusList.appendChild(li);
                    updateOverallStatus(availableCount, files.length);
                };
                img.src = file.name;
            });
        }
        
        function updateOverallStatus(available, total) {
            const percentage = (available / total * 100).toFixed(0);
            const statusElement = document.getElementById('overall-status');
            const headerElement = document.getElementById('last-update-header');
            
            if (percentage >= 80) {
                statusElement.innerHTML = `<span class="status-indicator status-success"></span>Excellent (${available}/${total} charts available)`;
                headerElement.innerHTML = `üìä Dashboard: ${percentage}% Complete - Most data available`;
            } else if (percentage >= 50) {
                statusElement.innerHTML = `<span class="status-indicator status-warning"></span>Good (${available}/${total} charts available)`;
                headerElement.innerHTML = `‚ö†Ô∏è Dashboard: ${percentage}% Complete - Some charts missing`;
            } else {
                statusElement.innerHTML = `<span class="status-indicator status-danger"></span>Limited (${available}/${total} charts available)`;
                headerElement.innerHTML = `‚ùå Dashboard: ${percentage}% Complete - Run data processors`;
            }
        }
        
        // Load last updated timestamps
        function loadLastUpdated() {
            const timestampFiles = [
                'last_updated_team_charts.txt',
                'last_updated_team_standings.txt',
                'last_updated_awards.txt'
            ];
            
            Promise.all(timestampFiles.map(file => 
                fetch(file).then(r => r.text()).catch(() => 'Not available')
            )).then(timestamps => {
                const latest = timestamps.filter(t => t !== 'Not available').sort().pop() || 'No data available';
                document.getElementById('last-update').textContent = latest;
            });
        }
        
        // Load standings table
        function loadStandingsTable() {
            fetch('team_standings.csv')
                .then(response => response.text())
                .then(data => {
                    const lines = data.split('\n');
                    if (lines.length > 1) {
                        const headers = lines[0].split(',');
                        const teams = lines.slice(1).filter(line => line.trim());
                        
                        let tableHTML = '<table style="width: 100%; border-collapse: collapse; margin-top: 10px;">';
                        tableHTML += '<thead><tr>';
                        headers.forEach(header => {
                            tableHTML += `<th style="border: 1px solid #444; padding: 8px; background: #333; color: #007bff;">${header.trim()}</th>`;
                        });
                        tableHTML += '</tr></thead><tbody>';
                        
                        teams.slice(0, 32).forEach(team => {
                            const values = team.split(',');
                            tableHTML += '<tr>';
                            values.forEach(value => {
                                tableHTML += `<td style="border: 1px solid #444; padding: 8px;">${value.trim()}</td>`;
                            });
                            tableHTML += '</tr>';
                        });
                        
                        tableHTML += '</tbody></table>';
                        document.getElementById('standings-table').innerHTML = tableHTML;
                    }
                })
                .catch(error => {
                    document.getElementById('standings-table').innerHTML = '<div class="chart-error">Standings data not available. Generate by running team processors.</div>';
                });
        }
        
        // Initialize dashboard
        document.addEventListener('DOMContentLoaded', function() {
            loadDataStatus();
            loadLastUpdated();
            loadStandingsTable();
            
            // Set initial header status
            document.getElementById('last-update-header').textContent = 'üîÑ Checking data availability...';
        });
    </script>
</body>
</html>
    <style>
        :root {
            --bg-color: #1a1a1a;
            --text-color: #ffffff;
            --accent-color: #007bff;
            --card-bg: #2d2d2d;
            --border-color: #444;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background-color: var(--bg-color);
            color: var(--text-color);
            line-height: 1.6;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        header {
            text-align: center;
            margin-bottom: 30px;
            padding: 20px;
            background: linear-gradient(135deg, #007bff, #0056b3);
            border-radius: 10px;
        }
        
        .nav-tabs {
            display: flex;
            justify-content: center;
            margin-bottom: 30px;
            border-bottom: 2px solid var(--border-color);
        }
        
        .nav-tab {
            padding: 10px 20px;
            margin: 0 5px;
            background: var(--card-bg);
            border: 1px solid var(--border-color);
            border-radius: 5px 5px 0 0;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .nav-tab:hover, .nav-tab.active {
            background: var(--accent-color);
            color: white;
        }
        
        .tab-content {
            display: none;
        }
        
        .tab-content.active {
            display: block;
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .stat-card {
            background: var(--card-bg);
            padding: 20px;
            border-radius: 10px;
            border: 1px solid var(--border-color);
        }
        
        .chart-container {
            text-align: center;
            margin: 20px 0;
        }
        
        .chart-container img {
            max-width: 100%;
            height: auto;
            border-radius: 5px;
        }
        
        .last-updated {
            text-align: center;
            margin-top: 20px;
            color: #888;
            font-size: 0.9em;
        }
        
        @media (max-width: 768px) {
            .nav-tabs {
                flex-wrap: wrap;
            }
            
            .nav-tab {
                flex: 1;
                min-width: 120px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>üèà NFL Stats Dashboard</h1>
            <p>Real-time NFL statistics, trends, and analysis</p>
        </header>
        
        <div class="nav-tabs">
            <div class="nav-tab active" onclick="showTab('overview')">Overview</div>
            <div class="nav-tab" onclick="showTab('players')">Players</div>
            <div class="nav-tab" onclick="showTab('teams')">Teams</div>
            <div class="nav-tab" onclick="showTab('standings')">Standings</div>
            <div class="nav-tab" onclick="showTab('awards')">Awards</div>
        </div>
        
        <div id="overview" class="tab-content active">
            <div class="stats-grid">
                <div class="stat-card">
                    <h3>üéØ Top Passers</h3>
                    <div class="chart-container">
                        <img src="passing_stats.png" alt="Passing Statistics" onerror="this.innerHTML='<p>Passing stats chart not available yet</p>'">
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üèÉ Top Rushers</h3>
                    <div class="chart-container">
                        <img src="rushing_stats.png" alt="Rushing Statistics" onerror="this.innerHTML='<p>Rushing stats chart not available yet</p>'">
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üéØ Top Receivers</h3>
                    <div class="chart-container">
                        <img src="receiving_stats.png" alt="Receiving Statistics" onerror="this.innerHTML='<p>Receiving stats chart not available yet</p>'">
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üõ°Ô∏è Defense Leaders</h3>
                    <div class="chart-container">
                        <img src="defense_stats.png" alt="Defense Statistics" onerror="this.innerHTML='<p>Defense stats chart not available yet</p>'">
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üìä Team Standings</h3>
                    <p><small>Division leaders and conference standings</small></p>
                    <div class="chart-container">
                        <img src="team_stats.png" alt="Team Statistics" onerror="this.innerHTML='<p>Team stats chart not available yet</p>'">
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>ÔøΩ Team Trends</h3>
                    <p><small>Weekly momentum and recent form</small></p>
                    <div class="chart-container">
                        <img src="team_weekly_trends.png" alt="Team Weekly Trends" onerror="this.innerHTML='<p>Team trends chart not available yet</p>'">
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>ÔøΩüî¨ Advanced Team Analytics</h3>
                    <p><small>Conference comparisons and deep analysis</small></p>
                    <div class="chart-container">
                        <img src="team_advanced_analytics.png" alt="Advanced Team Analytics" onerror="this.innerHTML='<p>Advanced analytics not available yet</p>'">
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üèÜ Award Predictions</h3>
                    <p><small>MVP, OROY, DROY predictions</small></p>
                    <div class="chart-container">
                        <img src="awards_predictions.png" alt="Awards Predictions" onerror="this.innerHTML='<p>Awards predictions not available yet</p>'">
                    </div>
                </div>
            </div>
        </div>
        
        <div id="players" class="tab-content">
            <h2>Player Statistics</h2>
            <div class="stats-grid">
                <div class="stat-card">
                    <h3>üéØ Passing Leaders</h3>
                    <div class="chart-container">
                        <img src="passing_stats.png" alt="Passing Statistics" onerror="this.innerHTML='<p>Passing stats not available yet</p>'">
                    </div>
                    <div id="passing-stats">
                        <p><small>Loading passing data...</small></p>
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üèÉ Rushing Leaders</h3>
                    <div class="chart-container">
                        <img src="rushing_stats.png" alt="Rushing Statistics" onerror="this.innerHTML='<p>Rushing stats not available yet</p>'">
                    </div>
                    <div id="rushing-stats">
                        <p><small>Loading rushing data...</small></p>
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üéØ Receiving Leaders</h3>
                    <div class="chart-container">
                        <img src="receiving_stats.png" alt="Receiving Statistics" onerror="this.innerHTML='<p>Receiving stats not available yet</p>'">
                    </div>
                    <div id="receiving-stats">
                        <p><small>Loading receiving data...</small></p>
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üõ°Ô∏è Defensive Leaders</h3>
                    <div class="chart-container">
                        <img src="defense_stats.png" alt="Defense Statistics" onerror="this.innerHTML='<p>Defense stats not available yet</p>'">
                    </div>
                    <div id="defense-stats">
                        <p><small>Loading defensive data...</small></p>
                    </div>
                </div>
            </div>
        </div>
        
        <div id="teams" class="tab-content">
            <h2>Team Statistics & Analytics</h2>
            <div class="stats-grid">
                <div class="stat-card">
                    <h3>üìä Basic Team Stats</h3>
                    <p><small>Division standings, top offenses/defenses, point differential</small></p>
                    <div class="chart-container">
                        <img src="team_stats.png" alt="Basic Team Statistics" onerror="this.innerHTML='<p>Basic team stats chart not available yet</p>'">
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üìà Weekly Trends</h3>
                    <p><small>Team momentum, hot/cold streaks, recent form analysis</small></p>
                    <div class="chart-container">
                        <img src="team_weekly_trends.png" alt="Team Weekly Trends" onerror="this.innerHTML='<p>Weekly trends chart not available yet</p>'">
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üî¨ Advanced Analytics</h3>
                    <p><small>Conference comparisons, advanced metrics, deep analysis</small></p>
                    <div class="chart-container">
                        <img src="team_advanced_analytics.png" alt="Advanced Team Analytics" onerror="this.innerHTML='<p>Advanced analytics chart not available yet</p>'">
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>ÔøΩ Current Standings</h3>
                    <p><small>Raw team data and standings table</small></p>
                    <div id="team-standings-data">
                        <p>Loading team standings data...</p>
                        <a href="team_standings.csv" download style="color: #007bff;">üì• Download CSV</a>
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>‚ö° Quick Stats</h3>
                    <div id="team-quick-stats">
                        <p><strong>üèÜ Best Record:</strong> <span id="best-team">Loading...</span></p>
                        <p><strong>üéØ Top Offense:</strong> <span id="top-offense">Loading...</span></p>
                        <p><strong>üõ°Ô∏è Best Defense:</strong> <span id="best-defense">Loading...</span></p>
                        <p><strong>‚öñÔ∏è Biggest Differential:</strong> <span id="point-diff">Loading...</span></p>
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üïí Last Updated</h3>
                    <div id="team-update-times">
                        <p><strong>Basic Stats:</strong> <span id="basic-update">Loading...</span></p>
                        <p><strong>Trends:</strong> <span id="trends-update">Loading...</span></p>
                        <p><strong>Advanced:</strong> <span id="advanced-update">Loading...</span></p>
                    </div>
                </div>
            </div>
        </div>
        
        <div id="standings" class="tab-content">
            <h2>NFL Standings</h2>
            <div id="standings-content">
                <p>Standings data will be loaded here...</p>
            </div>
        </div>
        
        <div id="awards" class="tab-content">
            <h2>Award Predictions</h2>
            <div class="stats-grid">
                <div class="stat-card">
                    <h3>üèÜ NFL Awards Dashboard</h3>
                    <div class="chart-container">
                        <img src="awards_predictions.png" alt="Awards Predictions" onerror="this.innerHTML='<p>Awards predictions not available yet</p>'">
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üèÜ MVP Predictions</h3>
                    <div id="mvp-predictions">
                        <p><small>Loading MVP predictions...</small></p>
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üåü Offensive ROY</h3>
                    <div id="oroy-predictions">
                        <p><small>Loading OROY predictions...</small></p>
                    </div>
                </div>
                
                <div class="stat-card">
                    <h3>üõ°Ô∏è Defensive ROY</h3>
                    <div id="droy-predictions">
                        <p><small>Loading DROY predictions...</small></p>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="last-updated">
            <p>Last updated: <span id="last-update">Loading...</span></p>
        </div>
    </div>
    
    <script>
        function showTab(tabName) {
            // Hide all tab contents
            const tabContents = document.querySelectorAll('.tab-content');
            tabContents.forEach(content => content.classList.remove('active'));
            
            // Remove active class from all tabs
            const tabs = document.querySelectorAll('.nav-tab');
            tabs.forEach(tab => tab.classList.remove('active'));
            
            // Show selected tab content
            document.getElementById(tabName).classList.add('active');
            
            // Add active class to clicked tab
            event.target.classList.add('active');
        }
        
        // Load last updated timestamp
        function loadLastUpdated() {
            // Try to load the most recent timestamp from team stats
            fetch('last_updated_team_charts.txt')
                .then(response => response.text())
                .then(data => {
                    document.getElementById('last-update').textContent = data;
                    document.getElementById('advanced-update').textContent = data;
                })
                .catch(error => {
                    // Fallback to legacy timestamp file
                    fetch('last_updated_teams.txt')
                        .then(response => response.text())
                        .then(data => {
                            document.getElementById('last-update').textContent = data;
                        })
                        .catch(error => {
                            document.getElementById('last-update').textContent = 'No data available yet';
                        });
                });
            
            // Load basic team stats timestamp
            fetch('last_updated_team_standings.txt')
                .then(response => response.text())
                .then(data => {
                    document.getElementById('basic-update').textContent = data;
                })
                .catch(error => {
                    document.getElementById('basic-update').textContent = 'Not available';
                });
            
            // Load trends timestamp (same as basic for now)
            fetch('last_updated_team_standings.txt')
                .then(response => response.text())
                .then(data => {
                    document.getElementById('trends-update').textContent = data;
                })
                .catch(error => {
                    document.getElementById('trends-update').textContent = 'Not available';
                });
        }

        // Load team quick stats from CSV
        function loadTeamQuickStats() {
            fetch('team_standings.csv')
                .then(response => response.text())
                .then(data => {
                    const lines = data.split('\n');
                    if (lines.length > 1) {
                        const headers = lines[0].split(',');
                        const teams = lines.slice(1).filter(line => line.trim()).map(line => {
                            const values = line.split(',');
                            const team = {};
                            headers.forEach((header, index) => {
                                team[header.trim()] = values[index] ? values[index].trim() : '';
                            });
                            return team;
                        });
                        
                        // Find best stats
                        if (teams.length > 0) {
                            // Best record (assuming W and Win_Pct columns exist)
                            if (teams[0].W && teams[0].L) {
                                const bestRecord = teams.reduce((best, team) => {
                                    const wins = parseInt(team.W) || 0;
                                    const losses = parseInt(team.L) || 0;
                                    const bestWins = parseInt(best.W) || 0;
                                    const bestLosses = parseInt(best.L) || 0;
                                    const winPct = wins / (wins + losses);
                                    const bestWinPct = bestWins / (bestWins + bestLosses);
                                    return winPct > bestWinPct ? team : best;
                                });
                                document.getElementById('best-team').textContent = 
                                    `${bestRecord.Tm} (${bestRecord.W}-${bestRecord.L})`;
                            }
                            
                            // Top offense (highest PF)
                            if (teams[0].PF) {
                                const topOffense = teams.reduce((best, team) => {
                                    return (parseInt(team.PF) || 0) > (parseInt(best.PF) || 0) ? team : best;
                                });
                                document.getElementById('top-offense').textContent = 
                                    `${topOffense.Tm} (${topOffense.PF} pts)`;
                            }
                            
                            // Best defense (lowest PA)
                            if (teams[0].PA) {
                                const bestDefense = teams.reduce((best, team) => {
                                    return (parseInt(team.PA) || 999) < (parseInt(best.PA) || 999) ? team : best;
                                });
                                document.getElementById('best-defense').textContent = 
                                    `${bestDefense.Tm} (${bestDefense.PA} allowed)`;
                            }
                            
                            // Biggest point differential
                            if (teams[0].PF && teams[0].PA) {
                                const biggestDiff = teams.reduce((best, team) => {
                                    const diff = (parseInt(team.PF) || 0) - (parseInt(team.PA) || 0);
                                    const bestDiff = (parseInt(best.PF) || 0) - (parseInt(best.PA) || 0);
                                    return diff > bestDiff ? team : best;
                                });
                                const diff = (parseInt(biggestDiff.PF) || 0) - (parseInt(biggestDiff.PA) || 0);
                                document.getElementById('point-diff').textContent = 
                                    `${biggestDiff.Tm} (+${diff})`;
                            }
                        }
                    }
                })
                .catch(error => {
                    console.log('Could not load team quick stats:', error);
                });
        }

        // Load timestamps when page loads
        document.addEventListener('DOMContentLoaded', function() {
            loadLastUpdated();
            loadTeamQuickStats();
        });
    </script>
</body>
</html>